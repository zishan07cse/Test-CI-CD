name: Git action ci-cd

on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm test -- --coverage

      - name: Build project
        run: npm run build

  merge:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && success()  # Only merge if build and test passed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all branches

      - name: Merge feature branch into development
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git fetch origin  # Fetch all branches
          git checkout development || git checkout -b development  # Create if it doesn't exist
          git pull origin development
          git merge ${{ github.ref }}
          git push origin development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
      # Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Create the project directory if it doesn't exist
            PROJECT_DIR="/var/www/html/git_action_ci_cd"
            if [ ! -d "$PROJECT_DIR" ]; then
              sudo mkdir -p $PROJECT_DIR
              sudo chown -R ubuntu:www-data $PROJECT_DIR
              sudo chmod -R 775 $PROJECT_DIR
              echo "Project directory created: $PROJECT_DIR"
            else
              echo "Project directory already exists: $PROJECT_DIR"
            fi

            # Navigate to the project directory
            cd $PROJECT_DIR

            # Pull the latest code
            if [ ! -d ".git" ]; then
              git init
              git remote add origin https://github.com/zishan07cse/Git-Action-CI-CD.git
            fi
            git fetch origin
            git reset --hard origin/development

            # Install dependencies (Node.js, PHP, etc.)
            if [ -f "package.json" ]; then
              npm install
              npm run build
            fi

            # Restart Apache or any other service
            sudo systemctl restart apache2

            echo "Deployment completed successfully."
          EOF
