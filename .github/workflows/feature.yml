name: Test CI/CD

# Trigger the workflow on push to the development branch and on PR merges to development
on:
  push:
    branches:
      - 'feature-*'  # Triggers on branches with names starting with "feature-"
      - development
  # Uncomment the following if you want to trigger on pull requests to development
  # pull_request:
  #   branches:
  #     - development  # Triggers on pull requests targeting the development branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment with the specified version
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install project dependencies
      - name: Install dependencies
        run: npm install

      # Lint the code to check for syntax and style issues
      - name: Lint code
        run: npm run lint

      # Run unit tests and generate coverage report
      - name: Run unit tests
        run: npm test -- --coverage

      # Build the project
      - name: Build project
        run: npm run build

      # Create PR from feature branch to development
      - name: Create PR
        uses: poorva17/create-pr-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          HEAD_BRANCH: ${{ github.ref_name }}  # Dynamic feature branch
          BASE_BRANCH: development
          delete-branch: false

      # Set up SSH agent to deploy the build to EC2
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Create the project directory if it doesn't exist
            PROJECT_DIR="/var/www/projects/test-ci-cd"
            if [ ! -d "$PROJECT_DIR" ]; then
              sudo mkdir -p $PROJECT_DIR
              sudo chown -R ubuntu:www-data $PROJECT_DIR
              sudo chmod -R 775 $PROJECT_DIR
              echo "Project directory created: $PROJECT_DIR"
            else
              echo "Project directory already exists: $PROJECT_DIR"
            fi

            # Navigate to the project directory
            cd $PROJECT_DIR

            # Pull the latest code
            if [ ! -d ".git" ]; then
              git init
              git remote add origin https://github.com/zishan07cse/Test-CI-CD.git
            fi
            git fetch origin
            git reset --hard origin/main

            # Install dependencies (Node.js, PHP, etc.)
            # For example, if it's a Node.js project
            if [ -f "package.json" ]; then
              npm install
              npm run build
            fi

            # Restart Apache or any other service
            sudo systemctl restart apache2

            echo "Deployment completed successfully."
          EOF
